# Main Application
config.file = ./configuration.properties
run.mode=DEVELOPMENT
spring.main.banner-mode=off
logging.level.org.springframework=WARN
spring.task.scheduling.pool.size=32

# Developer mode options
#   - justload : when true, no data are stored in database, useful for testing aws access, comment to disable
developer.mode.justload=true


# Intercept SIGTERM signal
spring.main.register-shutdown-hook=true
server.shutdown=graceful
spring.task.execution.shutdown.await-termination=true
spring.task.execution.shutdown.await-termination-period=10s
spring.task.scheduling.shutdown.await-termination=true
spring.task.scheduling.shutdown.await-termination-period=10s
exit.timeout.minutes=30

#mongodb
spring.data.mongodb.uri=mongodb://localhost:27120,localhost:27121/helium-etl
spring.data.mongodb.auto-index-creation=true
etl.mongodb.sharding.enable=false

#logging
logging.level.com.disk91.etl.service.AwsService=debug
logging.level.com.disk91.etl.service.HotspotCacheAsync=debug
logging.level.org.springframework.data=info
logging.level.=info

# Caching log
logging.cache.fixedrate=1800000

# caching control
cache.hotspot.size=500000
cache.beacon.size=200000
cache.hotspot.commit=1000

# History management
hotspot.beacon.history.entries=10
hotspot.witness.history.entries=10
hotspot.update.prevent.until.days=30
# start loading historical data after a given date (in S from EPOC)
beacon.history.startdate=1681776000
witness.history.startdate=1681776000
iotpoc.history.startdate=1681776000
reward.history.startdate=1681776000

# RAW Beacon loading
beacon.load.enable=false
# RAW Witness loading
witness.load.enable=false

#  It must be a power of 2
witness.load.parallel.workers=4
witness.load.parallel.queue.size=32

# VERIFIED IoT PoC loading
iotpoc.load.enable=true
iotpoc.load.unselected=false
iotpoc.load.parallel.workers=1
iotpoc.load.parallel.queue.size=32

# Rewards
reward.load.enable=true
reward.load.parallel.workers=1
reward.load.parallel.queue.size=32

mobile.reward.load.enable=true
mobile.reward.load.parallel.workers=1
mobile.reward.load.parallel.queue.size=32

# legacy ETL for data enrichment
helium.legacy.api.enable=false
helium.legacy.api.endpoint=
helium.legacy.api.user=
helium.legacy.api.pass=
helium.legacy.api.credits=1000

# solana API for data enrichment and account retrieval
solana.api.url=https://api.shyft.to
solana.api.apikey=
solana.api.credit.per.minute=10

# Aws S3
aws.access.key=
aws.secret.key=
aws.bucket.name=foundation-poc-data-requester-pays

# Metering
management.endpoints.web.exposure.include=health,info,metrics,scheduledtasks,threaddump,prometheus

# web server
server.port=8091
server.address=0.0.0.0
server.forward-headers-strategy=native
