// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: service/poc_mobile.proto
// Protobuf Java Version: 4.29.2

package com.helium.grpc.mobile;

/**
 * Protobuf enum {@code helium.poc_mobile.heartbeat_validity}
 */
public enum heartbeat_validity
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>heartbeat_validity_valid = 0;</code>
   */
  heartbeat_validity_valid(0),
  /**
   * <code>heartbeat_validity_gateway_owner_not_found = 1 [deprecated = true];</code>
   */
  @java.lang.Deprecated
  heartbeat_validity_gateway_owner_not_found(1),
  /**
   * <code>heartbeat_validity_heartbeat_outside_range = 2;</code>
   */
  heartbeat_validity_heartbeat_outside_range(2),
  /**
   * <code>heartbeat_validity_bad_cbsd_id = 3;</code>
   */
  heartbeat_validity_bad_cbsd_id(3),
  /**
   * <code>heartbeat_validity_not_operational = 4;</code>
   */
  heartbeat_validity_not_operational(4),
  /**
   * <pre>
   * Gateway not found on the blockchain
   * </pre>
   *
   * <code>heartbeat_validity_gateway_not_found = 5;</code>
   */
  heartbeat_validity_gateway_not_found(5),
  /**
   * <pre>
   * No such coverage object with that UUID
   * </pre>
   *
   * <code>heartbeat_validity_no_such_coverage_object = 6;</code>
   */
  heartbeat_validity_no_such_coverage_object(6),
  /**
   * <pre>
   * Invalid coverage object UUID (cbsd_id did not match)
   * </pre>
   *
   * <code>heartbeat_validity_bad_coverage_object = 7;</code>
   */
  heartbeat_validity_bad_coverage_object(7),
  /**
   * <pre>
   * Invalid latitude and/or longitude
   * </pre>
   *
   * <code>heartbeat_validity_invalid_lat_lon = 8;</code>
   */
  heartbeat_validity_invalid_lat_lon(8),
  /**
   * <pre>
   * Heartbeat is too distant from the coverage object's hex coverage
   * </pre>
   *
   * <code>heartbeat_validity_too_far_from_coverage = 9;</code>
   */
  heartbeat_validity_too_far_from_coverage(9),
  /**
   * <pre>
   * Gateway is not asserted
   * </pre>
   *
   * <code>heartbeat_validity_gateway_not_asserted = 10;</code>
   */
  heartbeat_validity_gateway_not_asserted(10),
  /**
   * <pre>
   * heartbeat location is outside supported locations
   * </pre>
   *
   * <code>heartbeat_validity_unsupported_location = 11;</code>
   */
  heartbeat_validity_unsupported_location(11),
  /**
   * <pre>
   * Device Type not expected to submit heartbeats
   * </pre>
   *
   * <code>heartbeat_validity_invalid_device_type = 12;</code>
   */
  heartbeat_validity_invalid_device_type(12),
  UNRECOGNIZED(-1),
  ;

  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 29,
      /* patch= */ 2,
      /* suffix= */ "",
      heartbeat_validity.class.getName());
  }
  /**
   * <code>heartbeat_validity_valid = 0;</code>
   */
  public static final int heartbeat_validity_valid_VALUE = 0;
  /**
   * <code>heartbeat_validity_gateway_owner_not_found = 1 [deprecated = true];</code>
   */
  @java.lang.Deprecated public static final int heartbeat_validity_gateway_owner_not_found_VALUE = 1;
  /**
   * <code>heartbeat_validity_heartbeat_outside_range = 2;</code>
   */
  public static final int heartbeat_validity_heartbeat_outside_range_VALUE = 2;
  /**
   * <code>heartbeat_validity_bad_cbsd_id = 3;</code>
   */
  public static final int heartbeat_validity_bad_cbsd_id_VALUE = 3;
  /**
   * <code>heartbeat_validity_not_operational = 4;</code>
   */
  public static final int heartbeat_validity_not_operational_VALUE = 4;
  /**
   * <pre>
   * Gateway not found on the blockchain
   * </pre>
   *
   * <code>heartbeat_validity_gateway_not_found = 5;</code>
   */
  public static final int heartbeat_validity_gateway_not_found_VALUE = 5;
  /**
   * <pre>
   * No such coverage object with that UUID
   * </pre>
   *
   * <code>heartbeat_validity_no_such_coverage_object = 6;</code>
   */
  public static final int heartbeat_validity_no_such_coverage_object_VALUE = 6;
  /**
   * <pre>
   * Invalid coverage object UUID (cbsd_id did not match)
   * </pre>
   *
   * <code>heartbeat_validity_bad_coverage_object = 7;</code>
   */
  public static final int heartbeat_validity_bad_coverage_object_VALUE = 7;
  /**
   * <pre>
   * Invalid latitude and/or longitude
   * </pre>
   *
   * <code>heartbeat_validity_invalid_lat_lon = 8;</code>
   */
  public static final int heartbeat_validity_invalid_lat_lon_VALUE = 8;
  /**
   * <pre>
   * Heartbeat is too distant from the coverage object's hex coverage
   * </pre>
   *
   * <code>heartbeat_validity_too_far_from_coverage = 9;</code>
   */
  public static final int heartbeat_validity_too_far_from_coverage_VALUE = 9;
  /**
   * <pre>
   * Gateway is not asserted
   * </pre>
   *
   * <code>heartbeat_validity_gateway_not_asserted = 10;</code>
   */
  public static final int heartbeat_validity_gateway_not_asserted_VALUE = 10;
  /**
   * <pre>
   * heartbeat location is outside supported locations
   * </pre>
   *
   * <code>heartbeat_validity_unsupported_location = 11;</code>
   */
  public static final int heartbeat_validity_unsupported_location_VALUE = 11;
  /**
   * <pre>
   * Device Type not expected to submit heartbeats
   * </pre>
   *
   * <code>heartbeat_validity_invalid_device_type = 12;</code>
   */
  public static final int heartbeat_validity_invalid_device_type_VALUE = 12;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static heartbeat_validity valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static heartbeat_validity forNumber(int value) {
    switch (value) {
      case 0: return heartbeat_validity_valid;
      case 1: return heartbeat_validity_gateway_owner_not_found;
      case 2: return heartbeat_validity_heartbeat_outside_range;
      case 3: return heartbeat_validity_bad_cbsd_id;
      case 4: return heartbeat_validity_not_operational;
      case 5: return heartbeat_validity_gateway_not_found;
      case 6: return heartbeat_validity_no_such_coverage_object;
      case 7: return heartbeat_validity_bad_coverage_object;
      case 8: return heartbeat_validity_invalid_lat_lon;
      case 9: return heartbeat_validity_too_far_from_coverage;
      case 10: return heartbeat_validity_gateway_not_asserted;
      case 11: return heartbeat_validity_unsupported_location;
      case 12: return heartbeat_validity_invalid_device_type;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<heartbeat_validity>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      heartbeat_validity> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<heartbeat_validity>() {
          public heartbeat_validity findValueByNumber(int number) {
            return heartbeat_validity.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.helium.grpc.mobile.PocMobile.getDescriptor().getEnumTypes().get(9);
  }

  private static final heartbeat_validity[] VALUES = values();

  public static heartbeat_validity valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private heartbeat_validity(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:helium.poc_mobile.heartbeat_validity)
}

