// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: service/poc_mobile.proto
// Protobuf Java Version: 4.29.2

package com.helium.grpc.mobile;

/**
 * Protobuf enum {@code helium.poc_mobile.data_transfer_radio_access_technology}
 */
public enum data_transfer_radio_access_technology
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>UTRAN = 0;</code>
   */
  UTRAN(0),
  /**
   * <code>GERAN = 1;</code>
   */
  GERAN(1),
  /**
   * <code>WLAN = 2;</code>
   */
  WLAN(2),
  /**
   * <code>GAN = 3;</code>
   */
  GAN(3),
  /**
   * <code>HSPA_Evolution = 4;</code>
   */
  HSPA_Evolution(4),
  /**
   * <code>EUTRAN = 5;</code>
   */
  EUTRAN(5),
  UNRECOGNIZED(-1),
  ;

  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 29,
      /* patch= */ 2,
      /* suffix= */ "",
      data_transfer_radio_access_technology.class.getName());
  }
  /**
   * <code>UTRAN = 0;</code>
   */
  public static final int UTRAN_VALUE = 0;
  /**
   * <code>GERAN = 1;</code>
   */
  public static final int GERAN_VALUE = 1;
  /**
   * <code>WLAN = 2;</code>
   */
  public static final int WLAN_VALUE = 2;
  /**
   * <code>GAN = 3;</code>
   */
  public static final int GAN_VALUE = 3;
  /**
   * <code>HSPA_Evolution = 4;</code>
   */
  public static final int HSPA_Evolution_VALUE = 4;
  /**
   * <code>EUTRAN = 5;</code>
   */
  public static final int EUTRAN_VALUE = 5;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static data_transfer_radio_access_technology valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static data_transfer_radio_access_technology forNumber(int value) {
    switch (value) {
      case 0: return UTRAN;
      case 1: return GERAN;
      case 2: return WLAN;
      case 3: return GAN;
      case 4: return HSPA_Evolution;
      case 5: return EUTRAN;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<data_transfer_radio_access_technology>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      data_transfer_radio_access_technology> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<data_transfer_radio_access_technology>() {
          public data_transfer_radio_access_technology findValueByNumber(int number) {
            return data_transfer_radio_access_technology.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.helium.grpc.mobile.PocMobile.getDescriptor().getEnumTypes().get(17);
  }

  private static final data_transfer_radio_access_technology[] VALUES = values();

  public static data_transfer_radio_access_technology valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private data_transfer_radio_access_technology(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:helium.poc_mobile.data_transfer_radio_access_technology)
}

