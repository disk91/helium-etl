// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: service/poc_mobile.proto
// Protobuf Java Version: 4.29.2

package com.helium.grpc.mobile;

/**
 * Protobuf type {@code helium.poc_mobile.hex_usage_stats_req_v1}
 */
public final class hex_usage_stats_req_v1 extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:helium.poc_mobile.hex_usage_stats_req_v1)
    hex_usage_stats_req_v1OrBuilder {
private static final long serialVersionUID = 0L;
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 29,
      /* patch= */ 2,
      /* suffix= */ "",
      hex_usage_stats_req_v1.class.getName());
  }
  // Use hex_usage_stats_req_v1.newBuilder() to construct.
  private hex_usage_stats_req_v1(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private hex_usage_stats_req_v1() {
    carrierMappingKey_ = com.google.protobuf.ByteString.EMPTY;
    signature_ = com.google.protobuf.ByteString.EMPTY;
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.helium.grpc.mobile.PocMobile.internal_static_helium_poc_mobile_hex_usage_stats_req_v1_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.helium.grpc.mobile.PocMobile.internal_static_helium_poc_mobile_hex_usage_stats_req_v1_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.helium.grpc.mobile.hex_usage_stats_req_v1.class, com.helium.grpc.mobile.hex_usage_stats_req_v1.Builder.class);
  }

  public static final int HEX_FIELD_NUMBER = 1;
  private long hex_ = 0L;
  /**
   * <pre>
   * H3 resolution 10 tile
   * </pre>
   *
   * <code>uint64 hex = 1;</code>
   * @return The hex.
   */
  @java.lang.Override
  public long getHex() {
    return hex_;
  }

  public static final int SERVICE_PROVIDER_USER_COUNT_FIELD_NUMBER = 2;
  private long serviceProviderUserCount_ = 0L;
  /**
   * <pre>
   * Number of unique service provider subscribers active in the hex
   * during the epoch ( inclusive of discovery mapping enabled subscribers )
   * </pre>
   *
   * <code>uint64 service_provider_user_count = 2;</code>
   * @return The serviceProviderUserCount.
   */
  @java.lang.Override
  public long getServiceProviderUserCount() {
    return serviceProviderUserCount_;
  }

  public static final int DISCO_MAPPING_USER_COUNT_FIELD_NUMBER = 3;
  private long discoMappingUserCount_ = 0L;
  /**
   * <pre>
   * Number of unique discovery mapping enabled subscribers active
   * in the hex during the epoch
   * </pre>
   *
   * <code>uint64 disco_mapping_user_count = 3;</code>
   * @return The discoMappingUserCount.
   */
  @java.lang.Override
  public long getDiscoMappingUserCount() {
    return discoMappingUserCount_;
  }

  public static final int OFFLOAD_USER_COUNT_FIELD_NUMBER = 4;
  private long offloadUserCount_ = 0L;
  /**
   * <pre>
   * Number of unique offload users active in the hex during the epoch
   * </pre>
   *
   * <code>uint64 offload_user_count = 4;</code>
   * @return The offloadUserCount.
   */
  @java.lang.Override
  public long getOffloadUserCount() {
    return offloadUserCount_;
  }

  public static final int SERVICE_PROVIDER_TRANSFER_BYTES_FIELD_NUMBER = 5;
  private long serviceProviderTransferBytes_ = 0L;
  /**
   * <pre>
   * total count of bytes transferred via radios located in the hex
   * by service provider subscribers during the epoch,
   * inclusive of upload and download
   * </pre>
   *
   * <code>uint64 service_provider_transfer_bytes = 5;</code>
   * @return The serviceProviderTransferBytes.
   */
  @java.lang.Override
  public long getServiceProviderTransferBytes() {
    return serviceProviderTransferBytes_;
  }

  public static final int OFFLOAD_TRANSFER_BYTES_FIELD_NUMBER = 6;
  private long offloadTransferBytes_ = 0L;
  /**
   * <pre>
   * total count of bytes transferred via radios located in the hex
   * by offload users during the epoch
   * inclusive of upload and download
   * </pre>
   *
   * <code>uint64 offload_transfer_bytes = 6;</code>
   * @return The offloadTransferBytes.
   */
  @java.lang.Override
  public long getOffloadTransferBytes() {
    return offloadTransferBytes_;
  }

  public static final int EPOCH_START_TIMESTAMP_FIELD_NUMBER = 7;
  private long epochStartTimestamp_ = 0L;
  /**
   * <pre>
   * Unix timestamp in milliseconds of the epoch start
   * </pre>
   *
   * <code>uint64 epoch_start_timestamp = 7;</code>
   * @return The epochStartTimestamp.
   */
  @java.lang.Override
  public long getEpochStartTimestamp() {
    return epochStartTimestamp_;
  }

  public static final int EPOCH_END_TIMESTAMP_FIELD_NUMBER = 8;
  private long epochEndTimestamp_ = 0L;
  /**
   * <pre>
   * Unix timestamp in milliseconds of the epoch end
   * </pre>
   *
   * <code>uint64 epoch_end_timestamp = 8;</code>
   * @return The epochEndTimestamp.
   */
  @java.lang.Override
  public long getEpochEndTimestamp() {
    return epochEndTimestamp_;
  }

  public static final int TIMESTAMP_FIELD_NUMBER = 9;
  private long timestamp_ = 0L;
  /**
   * <pre>
   * Unix timestamp in milliseconds of when the report was generated
   * </pre>
   *
   * <code>uint64 timestamp = 9;</code>
   * @return The timestamp.
   */
  @java.lang.Override
  public long getTimestamp() {
    return timestamp_;
  }

  public static final int CARRIER_MAPPING_KEY_FIELD_NUMBER = 10;
  private com.google.protobuf.ByteString carrierMappingKey_ = com.google.protobuf.ByteString.EMPTY;
  /**
   * <pre>
   * Carrier pubkey from verification mapping service
   * </pre>
   *
   * <code>bytes carrier_mapping_key = 10;</code>
   * @return The carrierMappingKey.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getCarrierMappingKey() {
    return carrierMappingKey_;
  }

  public static final int SIGNATURE_FIELD_NUMBER = 11;
  private com.google.protobuf.ByteString signature_ = com.google.protobuf.ByteString.EMPTY;
  /**
   * <pre>
   * Signed payload of the verification mapping service
   * </pre>
   *
   * <code>bytes signature = 11;</code>
   * @return The signature.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getSignature() {
    return signature_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (hex_ != 0L) {
      output.writeUInt64(1, hex_);
    }
    if (serviceProviderUserCount_ != 0L) {
      output.writeUInt64(2, serviceProviderUserCount_);
    }
    if (discoMappingUserCount_ != 0L) {
      output.writeUInt64(3, discoMappingUserCount_);
    }
    if (offloadUserCount_ != 0L) {
      output.writeUInt64(4, offloadUserCount_);
    }
    if (serviceProviderTransferBytes_ != 0L) {
      output.writeUInt64(5, serviceProviderTransferBytes_);
    }
    if (offloadTransferBytes_ != 0L) {
      output.writeUInt64(6, offloadTransferBytes_);
    }
    if (epochStartTimestamp_ != 0L) {
      output.writeUInt64(7, epochStartTimestamp_);
    }
    if (epochEndTimestamp_ != 0L) {
      output.writeUInt64(8, epochEndTimestamp_);
    }
    if (timestamp_ != 0L) {
      output.writeUInt64(9, timestamp_);
    }
    if (!carrierMappingKey_.isEmpty()) {
      output.writeBytes(10, carrierMappingKey_);
    }
    if (!signature_.isEmpty()) {
      output.writeBytes(11, signature_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (hex_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(1, hex_);
    }
    if (serviceProviderUserCount_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(2, serviceProviderUserCount_);
    }
    if (discoMappingUserCount_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(3, discoMappingUserCount_);
    }
    if (offloadUserCount_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(4, offloadUserCount_);
    }
    if (serviceProviderTransferBytes_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(5, serviceProviderTransferBytes_);
    }
    if (offloadTransferBytes_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(6, offloadTransferBytes_);
    }
    if (epochStartTimestamp_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(7, epochStartTimestamp_);
    }
    if (epochEndTimestamp_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(8, epochEndTimestamp_);
    }
    if (timestamp_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(9, timestamp_);
    }
    if (!carrierMappingKey_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeBytesSize(10, carrierMappingKey_);
    }
    if (!signature_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeBytesSize(11, signature_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.helium.grpc.mobile.hex_usage_stats_req_v1)) {
      return super.equals(obj);
    }
    com.helium.grpc.mobile.hex_usage_stats_req_v1 other = (com.helium.grpc.mobile.hex_usage_stats_req_v1) obj;

    if (getHex()
        != other.getHex()) return false;
    if (getServiceProviderUserCount()
        != other.getServiceProviderUserCount()) return false;
    if (getDiscoMappingUserCount()
        != other.getDiscoMappingUserCount()) return false;
    if (getOffloadUserCount()
        != other.getOffloadUserCount()) return false;
    if (getServiceProviderTransferBytes()
        != other.getServiceProviderTransferBytes()) return false;
    if (getOffloadTransferBytes()
        != other.getOffloadTransferBytes()) return false;
    if (getEpochStartTimestamp()
        != other.getEpochStartTimestamp()) return false;
    if (getEpochEndTimestamp()
        != other.getEpochEndTimestamp()) return false;
    if (getTimestamp()
        != other.getTimestamp()) return false;
    if (!getCarrierMappingKey()
        .equals(other.getCarrierMappingKey())) return false;
    if (!getSignature()
        .equals(other.getSignature())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + HEX_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getHex());
    hash = (37 * hash) + SERVICE_PROVIDER_USER_COUNT_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getServiceProviderUserCount());
    hash = (37 * hash) + DISCO_MAPPING_USER_COUNT_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getDiscoMappingUserCount());
    hash = (37 * hash) + OFFLOAD_USER_COUNT_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getOffloadUserCount());
    hash = (37 * hash) + SERVICE_PROVIDER_TRANSFER_BYTES_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getServiceProviderTransferBytes());
    hash = (37 * hash) + OFFLOAD_TRANSFER_BYTES_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getOffloadTransferBytes());
    hash = (37 * hash) + EPOCH_START_TIMESTAMP_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getEpochStartTimestamp());
    hash = (37 * hash) + EPOCH_END_TIMESTAMP_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getEpochEndTimestamp());
    hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getTimestamp());
    hash = (37 * hash) + CARRIER_MAPPING_KEY_FIELD_NUMBER;
    hash = (53 * hash) + getCarrierMappingKey().hashCode();
    hash = (37 * hash) + SIGNATURE_FIELD_NUMBER;
    hash = (53 * hash) + getSignature().hashCode();
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.helium.grpc.mobile.hex_usage_stats_req_v1 parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.helium.grpc.mobile.hex_usage_stats_req_v1 parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.helium.grpc.mobile.hex_usage_stats_req_v1 parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.helium.grpc.mobile.hex_usage_stats_req_v1 parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.helium.grpc.mobile.hex_usage_stats_req_v1 parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.helium.grpc.mobile.hex_usage_stats_req_v1 parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.helium.grpc.mobile.hex_usage_stats_req_v1 parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static com.helium.grpc.mobile.hex_usage_stats_req_v1 parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.helium.grpc.mobile.hex_usage_stats_req_v1 parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.helium.grpc.mobile.hex_usage_stats_req_v1 parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.helium.grpc.mobile.hex_usage_stats_req_v1 parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static com.helium.grpc.mobile.hex_usage_stats_req_v1 parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.helium.grpc.mobile.hex_usage_stats_req_v1 prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code helium.poc_mobile.hex_usage_stats_req_v1}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:helium.poc_mobile.hex_usage_stats_req_v1)
      com.helium.grpc.mobile.hex_usage_stats_req_v1OrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.helium.grpc.mobile.PocMobile.internal_static_helium_poc_mobile_hex_usage_stats_req_v1_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.helium.grpc.mobile.PocMobile.internal_static_helium_poc_mobile_hex_usage_stats_req_v1_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.helium.grpc.mobile.hex_usage_stats_req_v1.class, com.helium.grpc.mobile.hex_usage_stats_req_v1.Builder.class);
    }

    // Construct using com.helium.grpc.mobile.hex_usage_stats_req_v1.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      hex_ = 0L;
      serviceProviderUserCount_ = 0L;
      discoMappingUserCount_ = 0L;
      offloadUserCount_ = 0L;
      serviceProviderTransferBytes_ = 0L;
      offloadTransferBytes_ = 0L;
      epochStartTimestamp_ = 0L;
      epochEndTimestamp_ = 0L;
      timestamp_ = 0L;
      carrierMappingKey_ = com.google.protobuf.ByteString.EMPTY;
      signature_ = com.google.protobuf.ByteString.EMPTY;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.helium.grpc.mobile.PocMobile.internal_static_helium_poc_mobile_hex_usage_stats_req_v1_descriptor;
    }

    @java.lang.Override
    public com.helium.grpc.mobile.hex_usage_stats_req_v1 getDefaultInstanceForType() {
      return com.helium.grpc.mobile.hex_usage_stats_req_v1.getDefaultInstance();
    }

    @java.lang.Override
    public com.helium.grpc.mobile.hex_usage_stats_req_v1 build() {
      com.helium.grpc.mobile.hex_usage_stats_req_v1 result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.helium.grpc.mobile.hex_usage_stats_req_v1 buildPartial() {
      com.helium.grpc.mobile.hex_usage_stats_req_v1 result = new com.helium.grpc.mobile.hex_usage_stats_req_v1(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.helium.grpc.mobile.hex_usage_stats_req_v1 result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.hex_ = hex_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.serviceProviderUserCount_ = serviceProviderUserCount_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.discoMappingUserCount_ = discoMappingUserCount_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.offloadUserCount_ = offloadUserCount_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.serviceProviderTransferBytes_ = serviceProviderTransferBytes_;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.offloadTransferBytes_ = offloadTransferBytes_;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.epochStartTimestamp_ = epochStartTimestamp_;
      }
      if (((from_bitField0_ & 0x00000080) != 0)) {
        result.epochEndTimestamp_ = epochEndTimestamp_;
      }
      if (((from_bitField0_ & 0x00000100) != 0)) {
        result.timestamp_ = timestamp_;
      }
      if (((from_bitField0_ & 0x00000200) != 0)) {
        result.carrierMappingKey_ = carrierMappingKey_;
      }
      if (((from_bitField0_ & 0x00000400) != 0)) {
        result.signature_ = signature_;
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.helium.grpc.mobile.hex_usage_stats_req_v1) {
        return mergeFrom((com.helium.grpc.mobile.hex_usage_stats_req_v1)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.helium.grpc.mobile.hex_usage_stats_req_v1 other) {
      if (other == com.helium.grpc.mobile.hex_usage_stats_req_v1.getDefaultInstance()) return this;
      if (other.getHex() != 0L) {
        setHex(other.getHex());
      }
      if (other.getServiceProviderUserCount() != 0L) {
        setServiceProviderUserCount(other.getServiceProviderUserCount());
      }
      if (other.getDiscoMappingUserCount() != 0L) {
        setDiscoMappingUserCount(other.getDiscoMappingUserCount());
      }
      if (other.getOffloadUserCount() != 0L) {
        setOffloadUserCount(other.getOffloadUserCount());
      }
      if (other.getServiceProviderTransferBytes() != 0L) {
        setServiceProviderTransferBytes(other.getServiceProviderTransferBytes());
      }
      if (other.getOffloadTransferBytes() != 0L) {
        setOffloadTransferBytes(other.getOffloadTransferBytes());
      }
      if (other.getEpochStartTimestamp() != 0L) {
        setEpochStartTimestamp(other.getEpochStartTimestamp());
      }
      if (other.getEpochEndTimestamp() != 0L) {
        setEpochEndTimestamp(other.getEpochEndTimestamp());
      }
      if (other.getTimestamp() != 0L) {
        setTimestamp(other.getTimestamp());
      }
      if (other.getCarrierMappingKey() != com.google.protobuf.ByteString.EMPTY) {
        setCarrierMappingKey(other.getCarrierMappingKey());
      }
      if (other.getSignature() != com.google.protobuf.ByteString.EMPTY) {
        setSignature(other.getSignature());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              hex_ = input.readUInt64();
              bitField0_ |= 0x00000001;
              break;
            } // case 8
            case 16: {
              serviceProviderUserCount_ = input.readUInt64();
              bitField0_ |= 0x00000002;
              break;
            } // case 16
            case 24: {
              discoMappingUserCount_ = input.readUInt64();
              bitField0_ |= 0x00000004;
              break;
            } // case 24
            case 32: {
              offloadUserCount_ = input.readUInt64();
              bitField0_ |= 0x00000008;
              break;
            } // case 32
            case 40: {
              serviceProviderTransferBytes_ = input.readUInt64();
              bitField0_ |= 0x00000010;
              break;
            } // case 40
            case 48: {
              offloadTransferBytes_ = input.readUInt64();
              bitField0_ |= 0x00000020;
              break;
            } // case 48
            case 56: {
              epochStartTimestamp_ = input.readUInt64();
              bitField0_ |= 0x00000040;
              break;
            } // case 56
            case 64: {
              epochEndTimestamp_ = input.readUInt64();
              bitField0_ |= 0x00000080;
              break;
            } // case 64
            case 72: {
              timestamp_ = input.readUInt64();
              bitField0_ |= 0x00000100;
              break;
            } // case 72
            case 82: {
              carrierMappingKey_ = input.readBytes();
              bitField0_ |= 0x00000200;
              break;
            } // case 82
            case 90: {
              signature_ = input.readBytes();
              bitField0_ |= 0x00000400;
              break;
            } // case 90
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private long hex_ ;
    /**
     * <pre>
     * H3 resolution 10 tile
     * </pre>
     *
     * <code>uint64 hex = 1;</code>
     * @return The hex.
     */
    @java.lang.Override
    public long getHex() {
      return hex_;
    }
    /**
     * <pre>
     * H3 resolution 10 tile
     * </pre>
     *
     * <code>uint64 hex = 1;</code>
     * @param value The hex to set.
     * @return This builder for chaining.
     */
    public Builder setHex(long value) {

      hex_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * H3 resolution 10 tile
     * </pre>
     *
     * <code>uint64 hex = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearHex() {
      bitField0_ = (bitField0_ & ~0x00000001);
      hex_ = 0L;
      onChanged();
      return this;
    }

    private long serviceProviderUserCount_ ;
    /**
     * <pre>
     * Number of unique service provider subscribers active in the hex
     * during the epoch ( inclusive of discovery mapping enabled subscribers )
     * </pre>
     *
     * <code>uint64 service_provider_user_count = 2;</code>
     * @return The serviceProviderUserCount.
     */
    @java.lang.Override
    public long getServiceProviderUserCount() {
      return serviceProviderUserCount_;
    }
    /**
     * <pre>
     * Number of unique service provider subscribers active in the hex
     * during the epoch ( inclusive of discovery mapping enabled subscribers )
     * </pre>
     *
     * <code>uint64 service_provider_user_count = 2;</code>
     * @param value The serviceProviderUserCount to set.
     * @return This builder for chaining.
     */
    public Builder setServiceProviderUserCount(long value) {

      serviceProviderUserCount_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Number of unique service provider subscribers active in the hex
     * during the epoch ( inclusive of discovery mapping enabled subscribers )
     * </pre>
     *
     * <code>uint64 service_provider_user_count = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearServiceProviderUserCount() {
      bitField0_ = (bitField0_ & ~0x00000002);
      serviceProviderUserCount_ = 0L;
      onChanged();
      return this;
    }

    private long discoMappingUserCount_ ;
    /**
     * <pre>
     * Number of unique discovery mapping enabled subscribers active
     * in the hex during the epoch
     * </pre>
     *
     * <code>uint64 disco_mapping_user_count = 3;</code>
     * @return The discoMappingUserCount.
     */
    @java.lang.Override
    public long getDiscoMappingUserCount() {
      return discoMappingUserCount_;
    }
    /**
     * <pre>
     * Number of unique discovery mapping enabled subscribers active
     * in the hex during the epoch
     * </pre>
     *
     * <code>uint64 disco_mapping_user_count = 3;</code>
     * @param value The discoMappingUserCount to set.
     * @return This builder for chaining.
     */
    public Builder setDiscoMappingUserCount(long value) {

      discoMappingUserCount_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Number of unique discovery mapping enabled subscribers active
     * in the hex during the epoch
     * </pre>
     *
     * <code>uint64 disco_mapping_user_count = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearDiscoMappingUserCount() {
      bitField0_ = (bitField0_ & ~0x00000004);
      discoMappingUserCount_ = 0L;
      onChanged();
      return this;
    }

    private long offloadUserCount_ ;
    /**
     * <pre>
     * Number of unique offload users active in the hex during the epoch
     * </pre>
     *
     * <code>uint64 offload_user_count = 4;</code>
     * @return The offloadUserCount.
     */
    @java.lang.Override
    public long getOffloadUserCount() {
      return offloadUserCount_;
    }
    /**
     * <pre>
     * Number of unique offload users active in the hex during the epoch
     * </pre>
     *
     * <code>uint64 offload_user_count = 4;</code>
     * @param value The offloadUserCount to set.
     * @return This builder for chaining.
     */
    public Builder setOffloadUserCount(long value) {

      offloadUserCount_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Number of unique offload users active in the hex during the epoch
     * </pre>
     *
     * <code>uint64 offload_user_count = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearOffloadUserCount() {
      bitField0_ = (bitField0_ & ~0x00000008);
      offloadUserCount_ = 0L;
      onChanged();
      return this;
    }

    private long serviceProviderTransferBytes_ ;
    /**
     * <pre>
     * total count of bytes transferred via radios located in the hex
     * by service provider subscribers during the epoch,
     * inclusive of upload and download
     * </pre>
     *
     * <code>uint64 service_provider_transfer_bytes = 5;</code>
     * @return The serviceProviderTransferBytes.
     */
    @java.lang.Override
    public long getServiceProviderTransferBytes() {
      return serviceProviderTransferBytes_;
    }
    /**
     * <pre>
     * total count of bytes transferred via radios located in the hex
     * by service provider subscribers during the epoch,
     * inclusive of upload and download
     * </pre>
     *
     * <code>uint64 service_provider_transfer_bytes = 5;</code>
     * @param value The serviceProviderTransferBytes to set.
     * @return This builder for chaining.
     */
    public Builder setServiceProviderTransferBytes(long value) {

      serviceProviderTransferBytes_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * total count of bytes transferred via radios located in the hex
     * by service provider subscribers during the epoch,
     * inclusive of upload and download
     * </pre>
     *
     * <code>uint64 service_provider_transfer_bytes = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearServiceProviderTransferBytes() {
      bitField0_ = (bitField0_ & ~0x00000010);
      serviceProviderTransferBytes_ = 0L;
      onChanged();
      return this;
    }

    private long offloadTransferBytes_ ;
    /**
     * <pre>
     * total count of bytes transferred via radios located in the hex
     * by offload users during the epoch
     * inclusive of upload and download
     * </pre>
     *
     * <code>uint64 offload_transfer_bytes = 6;</code>
     * @return The offloadTransferBytes.
     */
    @java.lang.Override
    public long getOffloadTransferBytes() {
      return offloadTransferBytes_;
    }
    /**
     * <pre>
     * total count of bytes transferred via radios located in the hex
     * by offload users during the epoch
     * inclusive of upload and download
     * </pre>
     *
     * <code>uint64 offload_transfer_bytes = 6;</code>
     * @param value The offloadTransferBytes to set.
     * @return This builder for chaining.
     */
    public Builder setOffloadTransferBytes(long value) {

      offloadTransferBytes_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * total count of bytes transferred via radios located in the hex
     * by offload users during the epoch
     * inclusive of upload and download
     * </pre>
     *
     * <code>uint64 offload_transfer_bytes = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearOffloadTransferBytes() {
      bitField0_ = (bitField0_ & ~0x00000020);
      offloadTransferBytes_ = 0L;
      onChanged();
      return this;
    }

    private long epochStartTimestamp_ ;
    /**
     * <pre>
     * Unix timestamp in milliseconds of the epoch start
     * </pre>
     *
     * <code>uint64 epoch_start_timestamp = 7;</code>
     * @return The epochStartTimestamp.
     */
    @java.lang.Override
    public long getEpochStartTimestamp() {
      return epochStartTimestamp_;
    }
    /**
     * <pre>
     * Unix timestamp in milliseconds of the epoch start
     * </pre>
     *
     * <code>uint64 epoch_start_timestamp = 7;</code>
     * @param value The epochStartTimestamp to set.
     * @return This builder for chaining.
     */
    public Builder setEpochStartTimestamp(long value) {

      epochStartTimestamp_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Unix timestamp in milliseconds of the epoch start
     * </pre>
     *
     * <code>uint64 epoch_start_timestamp = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearEpochStartTimestamp() {
      bitField0_ = (bitField0_ & ~0x00000040);
      epochStartTimestamp_ = 0L;
      onChanged();
      return this;
    }

    private long epochEndTimestamp_ ;
    /**
     * <pre>
     * Unix timestamp in milliseconds of the epoch end
     * </pre>
     *
     * <code>uint64 epoch_end_timestamp = 8;</code>
     * @return The epochEndTimestamp.
     */
    @java.lang.Override
    public long getEpochEndTimestamp() {
      return epochEndTimestamp_;
    }
    /**
     * <pre>
     * Unix timestamp in milliseconds of the epoch end
     * </pre>
     *
     * <code>uint64 epoch_end_timestamp = 8;</code>
     * @param value The epochEndTimestamp to set.
     * @return This builder for chaining.
     */
    public Builder setEpochEndTimestamp(long value) {

      epochEndTimestamp_ = value;
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Unix timestamp in milliseconds of the epoch end
     * </pre>
     *
     * <code>uint64 epoch_end_timestamp = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearEpochEndTimestamp() {
      bitField0_ = (bitField0_ & ~0x00000080);
      epochEndTimestamp_ = 0L;
      onChanged();
      return this;
    }

    private long timestamp_ ;
    /**
     * <pre>
     * Unix timestamp in milliseconds of when the report was generated
     * </pre>
     *
     * <code>uint64 timestamp = 9;</code>
     * @return The timestamp.
     */
    @java.lang.Override
    public long getTimestamp() {
      return timestamp_;
    }
    /**
     * <pre>
     * Unix timestamp in milliseconds of when the report was generated
     * </pre>
     *
     * <code>uint64 timestamp = 9;</code>
     * @param value The timestamp to set.
     * @return This builder for chaining.
     */
    public Builder setTimestamp(long value) {

      timestamp_ = value;
      bitField0_ |= 0x00000100;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Unix timestamp in milliseconds of when the report was generated
     * </pre>
     *
     * <code>uint64 timestamp = 9;</code>
     * @return This builder for chaining.
     */
    public Builder clearTimestamp() {
      bitField0_ = (bitField0_ & ~0x00000100);
      timestamp_ = 0L;
      onChanged();
      return this;
    }

    private com.google.protobuf.ByteString carrierMappingKey_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <pre>
     * Carrier pubkey from verification mapping service
     * </pre>
     *
     * <code>bytes carrier_mapping_key = 10;</code>
     * @return The carrierMappingKey.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getCarrierMappingKey() {
      return carrierMappingKey_;
    }
    /**
     * <pre>
     * Carrier pubkey from verification mapping service
     * </pre>
     *
     * <code>bytes carrier_mapping_key = 10;</code>
     * @param value The carrierMappingKey to set.
     * @return This builder for chaining.
     */
    public Builder setCarrierMappingKey(com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      carrierMappingKey_ = value;
      bitField0_ |= 0x00000200;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Carrier pubkey from verification mapping service
     * </pre>
     *
     * <code>bytes carrier_mapping_key = 10;</code>
     * @return This builder for chaining.
     */
    public Builder clearCarrierMappingKey() {
      bitField0_ = (bitField0_ & ~0x00000200);
      carrierMappingKey_ = getDefaultInstance().getCarrierMappingKey();
      onChanged();
      return this;
    }

    private com.google.protobuf.ByteString signature_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <pre>
     * Signed payload of the verification mapping service
     * </pre>
     *
     * <code>bytes signature = 11;</code>
     * @return The signature.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getSignature() {
      return signature_;
    }
    /**
     * <pre>
     * Signed payload of the verification mapping service
     * </pre>
     *
     * <code>bytes signature = 11;</code>
     * @param value The signature to set.
     * @return This builder for chaining.
     */
    public Builder setSignature(com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      signature_ = value;
      bitField0_ |= 0x00000400;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Signed payload of the verification mapping service
     * </pre>
     *
     * <code>bytes signature = 11;</code>
     * @return This builder for chaining.
     */
    public Builder clearSignature() {
      bitField0_ = (bitField0_ & ~0x00000400);
      signature_ = getDefaultInstance().getSignature();
      onChanged();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:helium.poc_mobile.hex_usage_stats_req_v1)
  }

  // @@protoc_insertion_point(class_scope:helium.poc_mobile.hex_usage_stats_req_v1)
  private static final com.helium.grpc.mobile.hex_usage_stats_req_v1 DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.helium.grpc.mobile.hex_usage_stats_req_v1();
  }

  public static com.helium.grpc.mobile.hex_usage_stats_req_v1 getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<hex_usage_stats_req_v1>
      PARSER = new com.google.protobuf.AbstractParser<hex_usage_stats_req_v1>() {
    @java.lang.Override
    public hex_usage_stats_req_v1 parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<hex_usage_stats_req_v1> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<hex_usage_stats_req_v1> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.helium.grpc.mobile.hex_usage_stats_req_v1 getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

