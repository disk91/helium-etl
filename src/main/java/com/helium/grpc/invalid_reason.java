// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service/poc_lora.proto

package com.helium.grpc;

/**
 * Protobuf enum {@code helium.poc_lora.invalid_reason}
 */
public enum invalid_reason
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>reason_none = 0;</code>
   */
  reason_none(0),
  /**
   * <code>bad_signature = 1;</code>
   */
  bad_signature(1),
  /**
   * <code>not_asserted = 2;</code>
   */
  not_asserted(2),
  /**
   * <code>entropy_expired = 3;</code>
   */
  entropy_expired(3),
  /**
   * <code>bad_entropy = 4;</code>
   */
  bad_entropy(4),
  /**
   * <code>invalid_capability = 5;</code>
   */
  invalid_capability(5),
  /**
   * <code>invalid_pubkey = 6;</code>
   */
  invalid_pubkey(6),
  /**
   * <code>irregular_interval = 7;</code>
   */
  irregular_interval(7),
  /**
   * <code>gateway_not_found = 8;</code>
   */
  gateway_not_found(8),
  /**
   * <code>denied = 9;</code>
   */
  denied(9),
  /**
   * <code>invalid_packet = 10;</code>
   */
  invalid_packet(10),
  /**
   * <code>bad_rssi = 11;</code>
   */
  bad_rssi(11),
  /**
   * <code>invalid_region = 12;</code>
   */
  invalid_region(12),
  /**
   * <code>max_distance_exceeded = 13;</code>
   */
  max_distance_exceeded(13),
  /**
   * <code>invalid_frequency = 14;</code>
   */
  invalid_frequency(14),
  /**
   * <code>self_witness = 15;</code>
   */
  self_witness(15),
  /**
   * <code>stale = 16;</code>
   */
  stale(16),
  /**
   * <code>scaling_factor_not_found = 17;</code>
   */
  scaling_factor_not_found(17),
  /**
   * <code>unknown_error = 18;</code>
   */
  unknown_error(18),
  /**
   * <code>below_min_distance = 19;</code>
   */
  below_min_distance(19),
  /**
   * <code>duplicate = 20;</code>
   */
  duplicate(20),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>reason_none = 0;</code>
   */
  public static final int reason_none_VALUE = 0;
  /**
   * <code>bad_signature = 1;</code>
   */
  public static final int bad_signature_VALUE = 1;
  /**
   * <code>not_asserted = 2;</code>
   */
  public static final int not_asserted_VALUE = 2;
  /**
   * <code>entropy_expired = 3;</code>
   */
  public static final int entropy_expired_VALUE = 3;
  /**
   * <code>bad_entropy = 4;</code>
   */
  public static final int bad_entropy_VALUE = 4;
  /**
   * <code>invalid_capability = 5;</code>
   */
  public static final int invalid_capability_VALUE = 5;
  /**
   * <code>invalid_pubkey = 6;</code>
   */
  public static final int invalid_pubkey_VALUE = 6;
  /**
   * <code>irregular_interval = 7;</code>
   */
  public static final int irregular_interval_VALUE = 7;
  /**
   * <code>gateway_not_found = 8;</code>
   */
  public static final int gateway_not_found_VALUE = 8;
  /**
   * <code>denied = 9;</code>
   */
  public static final int denied_VALUE = 9;
  /**
   * <code>invalid_packet = 10;</code>
   */
  public static final int invalid_packet_VALUE = 10;
  /**
   * <code>bad_rssi = 11;</code>
   */
  public static final int bad_rssi_VALUE = 11;
  /**
   * <code>invalid_region = 12;</code>
   */
  public static final int invalid_region_VALUE = 12;
  /**
   * <code>max_distance_exceeded = 13;</code>
   */
  public static final int max_distance_exceeded_VALUE = 13;
  /**
   * <code>invalid_frequency = 14;</code>
   */
  public static final int invalid_frequency_VALUE = 14;
  /**
   * <code>self_witness = 15;</code>
   */
  public static final int self_witness_VALUE = 15;
  /**
   * <code>stale = 16;</code>
   */
  public static final int stale_VALUE = 16;
  /**
   * <code>scaling_factor_not_found = 17;</code>
   */
  public static final int scaling_factor_not_found_VALUE = 17;
  /**
   * <code>unknown_error = 18;</code>
   */
  public static final int unknown_error_VALUE = 18;
  /**
   * <code>below_min_distance = 19;</code>
   */
  public static final int below_min_distance_VALUE = 19;
  /**
   * <code>duplicate = 20;</code>
   */
  public static final int duplicate_VALUE = 20;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @Deprecated
  public static invalid_reason valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static invalid_reason forNumber(int value) {
    switch (value) {
      case 0: return reason_none;
      case 1: return bad_signature;
      case 2: return not_asserted;
      case 3: return entropy_expired;
      case 4: return bad_entropy;
      case 5: return invalid_capability;
      case 6: return invalid_pubkey;
      case 7: return irregular_interval;
      case 8: return gateway_not_found;
      case 9: return denied;
      case 10: return invalid_packet;
      case 11: return bad_rssi;
      case 12: return invalid_region;
      case 13: return max_distance_exceeded;
      case 14: return invalid_frequency;
      case 15: return self_witness;
      case 16: return stale;
      case 17: return scaling_factor_not_found;
      case 18: return unknown_error;
      case 19: return below_min_distance;
      case 20: return duplicate;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<invalid_reason>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      invalid_reason> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<invalid_reason>() {
          public invalid_reason findValueByNumber(int number) {
            return invalid_reason.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return PocLoRa.getDescriptor().getEnumTypes().get(2);
  }

  private static final invalid_reason[] VALUES = values();

  public static invalid_reason valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private invalid_reason(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:helium.poc_lora.invalid_reason)
}

