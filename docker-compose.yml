version: "3"

services:

  etl:
    image: disk91/etl
    container_name: etl
    restart: unless-stopped
    depends_on:
      - mongo-router01
      - mongo-router02
    environment:
      - AWS_ACCESS_KEY=
      - AWS_SECRET_KET=
    ports:
      - 127.0.0.1:8091:8091
    profiles:
      - etl
    links:
      - mongo-router01
      - mongo-router02

  ## Router - get the traffic request
  mongo-router01:
    image: mongo:6.0.1
    container_name: mongo-router-01
    command: mongos --port 27017 --configdb rs-config-server/mongo-configsvr01:27017,mongo-configsvr02:27017,mongo-configsvr03:27017 --bind_ip_all
    ports:
      - 127.0.0.1:27120:27017
    restart: always
    volumes:
      - /etl/configuration/mongo/scripts:/scripts
      - /etl/mongo/router-01:/data/db
      - /etl/configuration/mongo/router-01:/data/configdb
    profiles:
      - mongo
    depends_on:
      - mongo-shard01a
      - mongo-shard02a
      - mongo-shard03a

  mongo-router02:
    image: mongo:6.0.1
    container_name: mongo-router-02
    command: mongos --port 27017 --configdb rs-config-server/mongo-configsvr01:27017,mongo-configsvr02:27017,mongo-configsvr03:27017 --bind_ip_all
    ports:
      - 127.0.0.1:27121:27017
    restart: always
    volumes:
      - /etl/configuration/mongo/scripts:/scripts
      - /etl/mongo/router-02:/data/db
      - /etl/configuration/mongo/router-02:/data/configdb
    links:
      - mongo-router01
    profiles:
      - mongo
    depends_on:
      - mongo-shard01a
      - mongo-shard02a
      - mongo-shard03a

  ## Config Servers - know the cluster configuration
  mongo-configsvr01:
    image: mongo:6.0.1
    container_name: mongo-config-01
    command: mongod --port 27017 --configsvr --replSet rs-config-server
    volumes:
      - /etl/configuration/mongo/scripts:/scripts
      - /etl/mongo/config-01:/data/db
      - /etl/configuration/mongo/config-01:/data/configdb
    restart: always
    links:
      - mongo-shard01a
      - mongo-shard02a
      - mongo-shard03a
    profiles:
      - mongo

  mongo-configsvr02:
    image: mongo:6.0.1
    container_name: mongo-config-02
    command: mongod --port 27017 --configsvr --replSet rs-config-server
    volumes:
      - /etl/configuration/mongo/scripts:/scripts
      - /etl/mongo/config-02:/data/db
      - /etl/configuration/mongo/config-02:/data/configdb
    restart: always
    links:
      - mongo-configsvr01
    profiles:
      - mongo

  mongo-configsvr03:
    image: mongo:6.0.1
    container_name: mongo-config-03
    command: mongod --port 27017 --configsvr --replSet rs-config-server
    volumes:
      - /etl/configuration/mongo/scripts:/scripts
      - /etl/mongo/config-03:/data/db
      - /etl/configuration/mongo/config-03:/data/configdb
    restart: always
    links:
      - mongo-configsvr02
    profiles:
      - mongo

  ## Shards
  mongo-shard01a:
    image: mongo:6.0.1
    container_name: shard-01-node-a
    command: mongod --port 27017 --shardsvr --replSet rs-shard-01
    volumes:
      - /etl/configuration/mongo/scripts:/scripts
      - /etl/mongo/shard-01a:/data/db
      - /etl/configuration/mongo/shard-01a:/data/configdb
    restart: always
    profiles:
      - mongo
    depends_on:
      - mongo-configsvr01
      - mongo-configsvr02
      - mongo-configsvr03

  mongo-shard02a:
    image: mongo:6.0.1
    container_name: shard-02-node-a
    command: mongod --port 27017 --shardsvr --replSet rs-shard-02
    volumes:
      - /etl/configuration/mongo/scripts:/scripts
      - /etl/mongo/shard-02a:/data/db
      - /etl/configuration/mongo/shard-02a:/data/configdb
    restart: always
    profiles:
      - mongo
    depends_on:
      - mongo-configsvr01
      - mongo-configsvr02
      - mongo-configsvr03

  mongo-shard03a:
    image: mongo:6.0.1
    container_name: shard-03-node-a
    command: mongod --port 27017 --shardsvr --replSet rs-shard-03
    volumes:
      - /etl/configuration/mongo/scripts:/scripts
      - /etl/mongo/shard-03a:/data/db
      - /etl/configuration/mongo/shard-03a:/data/configdb
    restart: always
    profiles:
      - mongo
    depends_on:
      - mongo-configsvr01
      - mongo-configsvr02
      - mongo-configsvr03

  prometheus:
    image: prom/prometheus
    container_name: etl-prometheus
    network_mode: host
    restart: unless-stopped
    volumes:
      - /etl/configuration/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - /etl/prometheus:/prometheus
    profiles:
      - monitoring

  node_exporter:
    image: prom/node-exporter:latest
    container_name: etl-node-exp
    command:
      - '--path.rootfs=/host'
      - "--collector.filesystem"
      - "--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)"
      - "--collector.netstat"
      - "--collector.meminfo"
      - "--collector.cpu"
      - "--collector.loadavg"
      - "--collector.systemd"
      - "--collector.processes"
      - "--collector.ethtool"
      - "--collector.interrupts"
      - "--collector.tcpstat"
    network_mode: host
    pid: host
    restart: unless-stopped
    volumes:
      - '/:/host:ro,rslave'
    profiles:
      - monitoring

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: etl-cadvisor
    privileged: true
    devices:
      - /dev/kmsg:/dev/kmsg
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /cgroup:/cgroup:ro
    command:
      - '-port=8093'
    restart: unless-stopped
    network_mode: host
    profiles:
      - monitoring

  grafana:
    image: grafana/grafana-oss
    container_name: etl-grafana
    network_mode: host
    restart: unless-stopped
    volumes:
      - /etl/grafana:/var/lib/grafana
      - /etl/configuration/grafana:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_HTTP_PORT=8092
    depends_on:
      - prometheus
    profiles:
      - monitoring
